commit 3b0ff640c7095c36165ec2e7b02e9a98ba9fee8d
Author: user <username@example.com>
Date:   Sat Feb 18 20:01:49 2023 +0545

    Added riverpod, theme settings and routes.

diff --git a/lib/main.dart b/lib/main.dart
index 3c6e9b8..e1ad081 100644
--- a/lib/main.dart
+++ b/lib/main.dart
@@ -1,9 +1,11 @@
 import 'dart:io';
-import 'package:file_picker/file_picker.dart';
 import 'package:flutter/material.dart';
 import 'package:flutter/services.dart';
+import 'package:flutter_riverpod/flutter_riverpod.dart';
+import 'package:image/models/theme_settings.dart';
+import 'package:image/routes/routes.dart';
 
-import 'pages/image_page.dart';
+final themeProvider = StateNotifierProvider<ThemeSettingsNotifier, bool>((ref) => ThemeSettingsNotifier());
 
 void main() {
   // Dark navigation bar. Code may give issues.
@@ -12,156 +14,22 @@ void main() {
       systemNavigationBarColor: Colors.black,
     ));
   }
-
-  runApp(const MyApp());
+  runApp(const ProviderScope(child: MyApp()));
 }
 
-class MyApp extends StatelessWidget {
+class MyApp extends ConsumerWidget {
   const MyApp({super.key});
 
   @override
-  Widget build(BuildContext context) {
+  Widget build(BuildContext context, WidgetRef ref) {
+    var darkMode = ref.watch(themeProvider);
     return MaterialApp(
-      theme: ThemeData.dark(),
-      home: const MainPage(),
+      // darkTheme: ThemeData.dark(),
+      theme: darkMode ? darkTheme : lightTheme,
+      // home: const MainPage(),
+      initialRoute: RouteManager.mainPage,
+      onGenerateRoute: RouteManager.generateRoute,
     );
   }
 }
 
-class MainPage extends StatefulWidget {
-  final int? index;
-
-  const MainPage({this.index, super.key});
-
-  @override
-  State<MainPage> createState() => _MainPageState();
-}
-
-class _MainPageState extends State<MainPage> {
-  List files = [File('')];
-
-  // RangeValues rangeValues = RangeValues(0, 1);
-
-  @override
-  Widget build(BuildContext context) {
-    return Scaffold(
-      // appBar: AppBar(),
-
-      body: CustomScrollView(
-        slivers: [
-          SliverAppBar(
-            toolbarHeight: MediaQuery.of(context).size.height * 0.08,
-          ),
-          SliverFillRemaining(
-            child: PageView.builder(
-              // scrollDirection: Axis.vertical,
-              itemCount: files.length,
-              itemBuilder: (context, index) {
-                return GestureDetector(
-                  onTap: () {
-                    Navigator.push(
-                      context,
-                      MaterialPageRoute(
-                        builder: (context) {
-                          return InteractiveViewer(
-                              child: ImagePage(image: files[index]));
-                        },
-                      ),
-                    );
-                  },
-                  child: Image.file(files[index]),
-                );
-              },
-            ),
-          ),
-          SliverToBoxAdapter(
-            child: BottomNavigationBar(
-              items: bottomBarItems(),
-            ),
-          ),
-        ],
-      ),
-
-      drawer: SafeArea(
-        child: Drawer(
-          child: Column(
-            children: [
-              // For folder
-              ListTile(
-                onTap: () async {
-                  String? result = await FilePicker.platform.getDirectoryPath();
-
-                  if (result != null) {
-                    setState(
-                      () {
-                        files.clear();
-                        Directory(result).listSync().forEach(
-                          (f) {
-                            if (f is File && f.path.endsWith('.jpg') ||
-                                f.path.endsWith('.jpeg') ||
-                                f.path.endsWith('.png') ||
-                                f.path.endsWith('.gif')) {
-                              files.add(f);
-                            }
-                          },
-                        );
-                      },
-                    );
-                  }
-                  Navigator.pop(context);
-                },
-                leading: const Icon(
-                  Icons.add,
-                  size: 25,
-                ),
-                title: const Text('Open folder'),
-              ),
-              // For individual or multiple files
-              ListTile(
-                onTap: () async {
-                  FilePickerResult? result = await FilePicker.platform
-                      .pickFiles(type: FileType.image, allowMultiple: true);
-
-                  if (result != null) {
-                    setState(
-                      () {
-                        files.clear();
-                        files = result.paths
-                            .map((path) => File(path.toString()))
-                            .toList();
-                      },
-                    );
-                  }
-                  Navigator.pop(context);
-                },
-                leading: const Icon(
-                  Icons.add,
-                  size: 25,
-                ),
-                title: const Text('Open files'),
-              ),
-            ],
-          ),
-        ),
-      ),
-    );
-  }
-
-  List<BottomNavigationBarItem> bottomBarItems() {
-    return [
-      const BottomNavigationBarItem(
-        label: 'Home',
-        icon: Icon(
-          Icons.home,
-          color: Colors.white,
-        ),
-        backgroundColor: Colors.amber,
-      ),
-      const BottomNavigationBarItem(
-        label: 'Add',
-        icon: Icon(Icons.add, color: Colors.white),
-        backgroundColor: Colors.amber,
-      ),
-    ];
-  }
-}
diff --git a/lib/models/theme_settings.dart b/lib/models/theme_settings.dart
new file mode 100644
index 0000000..3ff7b27
--- /dev/null
+++ b/lib/models/theme_settings.dart
@@ -0,0 +1,26 @@
+import 'package:flutter/material.dart';
+import 'package:flutter_riverpod/flutter_riverpod.dart';
+import 'package:shared_preferences/shared_preferences.dart';
+
+ThemeData lightTheme = ThemeData.light();
+
+ThemeData darkTheme = ThemeData.dark();
+
+class ThemeSettingsNotifier extends StateNotifier<bool> {
+  ThemeSettingsNotifier() : super(false) {
+    initializePrefs();
+  }
+
+  late SharedPreferences preferences;
+
+  Future initializePrefs() async {
+    preferences = await SharedPreferences.getInstance();
+    var darkMode = preferences.getBool("darkMode");
+    state = darkMode ?? true;
+  }
+
+  void toggle() async {
+    state = !state;
+    preferences.setBool("darkMode", state);
+  }
+}
diff --git a/lib/pages/main_page.dart b/lib/pages/main_page.dart
new file mode 100644
index 0000000..93f682b
--- /dev/null
+++ b/lib/pages/main_page.dart
@@ -0,0 +1,152 @@
+import 'dart:io';
+import 'package:file_picker/file_picker.dart';
+import 'package:flutter/material.dart';
+import 'package:image/routes/routes.dart';
+
+import 'image_page.dart';
+
+
+class MainPage extends StatefulWidget {
+  final int? index;
+
+  const MainPage({this.index, super.key});
+
+  @override
+  State<MainPage> createState() => _MainPageState();
+}
+
+class _MainPageState extends State<MainPage> {
+  List files = [File('')];
+
+
+
+  @override
+  Widget build(BuildContext context) {
+    return Scaffold(
+
+      body: CustomScrollView(
+        slivers: [
+          SliverAppBar(
+            toolbarHeight: MediaQuery.of(context).size.height * 0.08,
+          ),
+          SliverFillRemaining(
+            child: PageView.builder(
+              // scrollDirection: Axis.vertical,
+              itemCount: files.length,
+              itemBuilder: (context, index) {
+                return GestureDetector(
+                  onTap: () {
+                    Navigator.push(
+                      context,
+                      MaterialPageRoute(
+                        builder: (context) {
+                          return InteractiveViewer(
+                              child: ImagePage(image: files[index]));
+                        },
+                      ),
+                    );
+                  },
+                  child: Image.file(files[index]),
+                );
+              },
+            ),
+          ),
+          SliverToBoxAdapter(
+            child: BottomNavigationBar(
+              items: bottomBarItems(),
+            ),
+          ),
+        ],
+      ),
+
+      drawer: SafeArea(
+        child: Drawer(
+          child: Column(
+            children: [
+              // For folder
+              ListTile(
+                onTap: () async {
+                  String? result = await FilePicker.platform.getDirectoryPath();
+
+                  if (result != null) {
+                    setState(
+                      () {
+                        files.clear();
+                        Directory(result).listSync().forEach(
+                          (f) {
+                            if (f is File && f.path.endsWith('.jpg') ||
+                                f.path.endsWith('.jpeg') ||
+                                f.path.endsWith('.png') ||
+                                f.path.endsWith('.gif')) {
+                              files.add(f);
+                            }
+                          },
+                        );
+                      },
+                    );
+                  }
+                  Navigator.pop(context);
+                },
+                leading: const Icon(
+                  Icons.add,
+                  size: 25,
+                ),
+                title: const Text('Open folder'),
+              ),
+              // For individual or multiple files
+              ListTile(
+                onTap: () async {
+                  FilePickerResult? result = await FilePicker.platform
+                      .pickFiles(type: FileType.image, allowMultiple: true);
+
+                  if (result != null) {
+                    setState(
+                      () {
+                        files.clear();
+                        files = result.paths
+                            .map((path) => File(path.toString()))
+                            .toList();
+                      },
+                    );
+                  }
+                  Navigator.pop(context);
+                },
+                leading: const Icon(
+                  Icons.add,
+                  size: 25,
+                ),
+                title: const Text('Open files'),
+              ),
+              ListTile(
+                title: const Text("Change settings"),
+                onTap: () {
+                  Navigator.of(context).pushNamed(RouteManager.settingsPage);
+                  
+                },
+                
+              ),
+            ],
+          ),
+        ),
+      ),
+    );
+  }
+
+  List<BottomNavigationBarItem> bottomBarItems() {
+    return [
+      const BottomNavigationBarItem(
+        label: 'Home',
+        icon: Icon(
+          Icons.home,
+          color: Colors.white,
+        ),
+        backgroundColor: Colors.amber,
+      ),
+      const BottomNavigationBarItem(
+        label: 'Add',
+        icon: Icon(Icons.add, color: Colors.white),
+        backgroundColor: Colors.amber,
+      ),
+    ];
+  }
+}
diff --git a/lib/pages/settings_page.dart b/lib/pages/settings_page.dart
new file mode 100644
index 0000000..39efd3c
--- /dev/null
+++ b/lib/pages/settings_page.dart
@@ -0,0 +1,40 @@
+import 'package:flutter/material.dart';
+import 'package:flutter_riverpod/flutter_riverpod.dart';
+import 'package:image/main.dart';
+
+
+class SettingsPage extends StatelessWidget {
+  const SettingsPage({super.key});
+
+  @override
+  Widget build(BuildContext context) {
+    return Scaffold(
+      appBar: AppBar(
+        title: const Text("Settings Page"),
+        leading: IconButton(
+            onPressed: () {
+              return Navigator.pop(context);
+            },
+            icon: const Icon(Icons.arrow_back)),
+      ),
+      body: Consumer(
+        builder: (context, ref, child) {
+          return Column(
+            children: [
+              Card(
+                child: SwitchListTile(
+                  title: const Text("Dark Theme"),
+                  
+                  value: false,
+                  onChanged: (value) {
+                    ref.read(themeProvider.notifier).toggle();
+                  },
+                ),
+              )
+            ],
+          );
+        }
+      ),
+    );
+  }
+}
diff --git a/lib/routes/routes.dart b/lib/routes/routes.dart
new file mode 100644
index 0000000..e51e8c1
--- /dev/null
+++ b/lib/routes/routes.dart
@@ -0,0 +1,29 @@
+import 'package:flutter/material.dart';
+import 'package:image/pages/settings_page.dart';
+
+import '../pages/main_page.dart';
+
+
+class RouteManager {
+  static const String mainPage = '/';
+  static const String settingsPage = '/settings';
+  static const String imagePage = '/imagePage';
+
+  static Route<dynamic> generateRoute(RouteSettings settings) {
+    switch (settings.name) {
+      case mainPage:
+        return MaterialPageRoute(
+          builder: (context) => const MainPage(),
+        );
+      case settingsPage:
+        return MaterialPageRoute(
+          builder: (context) => const SettingsPage(),
+        );
+      
+
+      default:
+        throw const FormatException("Route not found");
+        
+    }
+  }
+}
\ No newline at end of file
diff --git a/macos/Flutter/GeneratedPluginRegistrant.swift b/macos/Flutter/GeneratedPluginRegistrant.swift
index cccf817..724bb2a 100644
--- a/macos/Flutter/GeneratedPluginRegistrant.swift
+++ b/macos/Flutter/GeneratedPluginRegistrant.swift
@@ -5,6 +5,8 @@
 import FlutterMacOS
 import Foundation
 
+import shared_preferences_foundation
 
 func RegisterGeneratedPlugins(registry: FlutterPluginRegistry) {
+  SharedPreferencesPlugin.register(with: registry.registrar(forPlugin: "SharedPreferencesPlugin"))
 }
diff --git a/pubspec.lock b/pubspec.lock
index 719bbd2..b4b9900 100644
--- a/pubspec.lock
+++ b/pubspec.lock
@@ -65,6 +65,14 @@ packages:
       url: "https://pub.dev"
     source: hosted
     version: "2.0.1"
+  file:
+    dependency: transitive
+    description:
+      name: file
+      sha256: "1b92bec4fc2a72f59a8e15af5f52cd441e4a7860b49499d69dfa817af20e925d"
+      url: "https://pub.dev"
+    source: hosted
+    version: "6.1.4"
   file_picker:
     dependency: "direct main"
     description:
@@ -94,6 +102,14 @@ packages:
       url: "https://pub.dev"
     source: hosted
     version: "2.0.7"
+  flutter_riverpod:
+    dependency: "direct main"
+    description:
+      name: flutter_riverpod
+      sha256: "46a27b7a11dc13738054093076f2dc65692ddcd463979b15092accf5681aea20"
+      url: "https://pub.dev"
+    source: hosted
+    version: "2.2.0"
   flutter_test:
     dependency: "direct dev"
     description: flutter
@@ -152,6 +168,30 @@ packages:
       url: "https://pub.dev"
     source: hosted
     version: "1.8.2"
+  path_provider_linux:
+    dependency: transitive
+    description:
+      name: path_provider_linux
+      sha256: "2e32f1640f07caef0d3cb993680f181c79e54a3827b997d5ee221490d131fbd9"
+      url: "https://pub.dev"
+    source: hosted
+    version: "2.1.8"
+  path_provider_platform_interface:
+    dependency: transitive
+    description:
+      name: path_provider_platform_interface
+      sha256: f0abc8ebd7253741f05488b4813d936b4d07c6bae3e86148a09e342ee4b08e76
+      url: "https://pub.dev"
+    source: hosted
+    version: "2.0.5"
+  path_provider_windows:
+    dependency: transitive
+    description:
+      name: path_provider_windows
+      sha256: bcabbe399d4042b8ee687e17548d5d3f527255253b4a639f5f8d2094a9c2b45c
+      url: "https://pub.dev"
+    source: hosted
+    version: "2.1.3"
   photo_view:
     dependency: "direct main"
     description:
@@ -160,6 +200,14 @@ packages:
       url: "https://pub.dev"
     source: hosted
     version: "0.14.0"
+  platform:
+    dependency: transitive
+    description:
+      name: platform
+      sha256: "4a451831508d7d6ca779f7ac6e212b4023dd5a7d08a27a63da33756410e32b76"
+      url: "https://pub.dev"
+    source: hosted
+    version: "3.1.0"
   plugin_platform_interface:
     dependency: transitive
     description:
@@ -168,6 +216,78 @@ packages:
       url: "https://pub.dev"
     source: hosted
     version: "2.1.3"
+  process:
+    dependency: transitive
+    description:
+      name: process
+      sha256: "53fd8db9cec1d37b0574e12f07520d582019cb6c44abf5479a01505099a34a09"
+      url: "https://pub.dev"
+    source: hosted
+    version: "4.2.4"
+  riverpod:
+    dependency: transitive
+    description:
+      name: riverpod
+      sha256: "59a48de9c757aa61aa28e9fd625ffb360d43b6b54606f12536622c55be9e8c4b"
+      url: "https://pub.dev"
+    source: hosted
+    version: "2.2.0"
+  shared_preferences:
+    dependency: "direct main"
+    description:
+      name: shared_preferences
+      sha256: "5949029e70abe87f75cfe59d17bf5c397619c4b74a099b10116baeb34786fad9"
+      url: "https://pub.dev"
+    source: hosted
+    version: "2.0.17"
+  shared_preferences_android:
+    dependency: transitive
+    description:
+      name: shared_preferences_android
+      sha256: "955e9736a12ba776bdd261cf030232b30eadfcd9c79b32a3250dd4a494e8c8f7"
+      url: "https://pub.dev"
+    source: hosted
+    version: "2.0.15"
+  shared_preferences_foundation:
+    dependency: transitive
+    description:
+      name: shared_preferences_foundation
+      sha256: "2b55c18636a4edc529fa5cd44c03d3f3100c00513f518c5127c951978efcccd0"
+      url: "https://pub.dev"
+    source: hosted
+    version: "2.1.3"
+  shared_preferences_linux:
+    dependency: transitive
+    description:
+      name: shared_preferences_linux
+      sha256: f8ea038aa6da37090093974ebdcf4397010605fd2ff65c37a66f9d28394cb874
+      url: "https://pub.dev"
+    source: hosted
+    version: "2.1.3"
+  shared_preferences_platform_interface:
+    dependency: transitive
+    description:
+      name: shared_preferences_platform_interface
+      sha256: da9431745ede5ece47bc26d5d73a9d3c6936ef6945c101a5aca46f62e52c1cf3
+      url: "https://pub.dev"
+    source: hosted
+    version: "2.1.0"
+  shared_preferences_web:
+    dependency: transitive
+    description:
+      name: shared_preferences_web
+      sha256: a4b5bc37fe1b368bbc81f953197d55e12f49d0296e7e412dfe2d2d77d6929958
+      url: "https://pub.dev"
+    source: hosted
+    version: "2.0.4"
+  shared_preferences_windows:
+    dependency: transitive
+    description:
+      name: shared_preferences_windows
+      sha256: "5eaf05ae77658d3521d0e993ede1af962d4b326cd2153d312df716dc250f00c9"
+      url: "https://pub.dev"
+    source: hosted
+    version: "2.1.3"
   sky_engine:
     dependency: transitive
     description: flutter
@@ -189,6 +309,14 @@ packages:
       url: "https://pub.dev"
     source: hosted
     version: "1.11.0"
+  state_notifier:
+    dependency: transitive
+    description:
+      name: state_notifier
+      sha256: "8fe42610f179b843b12371e40db58c9444f8757f8b69d181c97e50787caed289"
+      url: "https://pub.dev"
+    source: hosted
+    version: "0.7.2+1"
   stream_channel:
     dependency: transitive
     description:
@@ -237,6 +365,14 @@ packages:
       url: "https://pub.dev"
     source: hosted
     version: "3.1.3"
+  xdg_directories:
+    dependency: transitive
+    description:
+      name: xdg_directories
+      sha256: ee1505df1426458f7f60aac270645098d318a8b4766d85fde75f76f2e21807d1
+      url: "https://pub.dev"
+    source: hosted
+    version: "1.0.0"
 sdks:
   dart: ">=2.18.6 <3.0.0"
-  flutter: ">=2.8.0"
+  flutter: ">=3.0.0"
diff --git a/pubspec.yaml b/pubspec.yaml
index f539189..5077c93 100644
--- a/pubspec.yaml
+++ b/pubspec.yaml
@@ -38,6 +38,8 @@ dependencies:
   cupertino_icons: ^1.0.2
   file_picker: ^5.2.4
   photo_view: ^0.14.0
+  shared_preferences: ^2.0.17
+  flutter_riverpod: ^2.2.0
  
 
 dev_dependencies:
